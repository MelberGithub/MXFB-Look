#!/bin/bash
#MXFB-Look is an app to save and restore the look of MX-Linux Fluxbox
#ceeslans.test2 01 July 2022
#License: GPL-3.0+
#mxcr-icon based on yad icon from papirus icon set
#Changelog
#added- check nitrogen or feh in fb-startup, enable setting wallpaper with feh
#fixed- disallow empty selection for restore look, conky toggle status display

#define some variables

TITLE="MXFB-Look"
CLASS="mxfblook"
MXLKPATH="$HOME/.config/mxfb-look"
ICONPATH="/usr/share/pixmaps/mxcr-icon.png"

#delete stylelist and tempclr after use
#trap "rm -r "$MXLKPATH/tempdir" " EXIT

#create path
if [ ! -d $MXLKPATH ]; then

mkdir $MXLKPATH

fi

#create looks folder

if [ ! -d $MXLKPATH/looks ]; then

  mkdir -p $MXLKPATH/looks

fi

#create tempdir

if [ ! -d $MXLKPATH/tempdir ]; then

  mkdir -p $MXLKPATH/tempdir

fi

#make Default look file

if [ ! -f $MXLKPATH/looks/MXFB-default.look ]; then

printf "gtk-theme-name=Fluent-grey-dark\ngtk-icon-theme-name=Papirus-Dark\ngtk-font-name=Liberation Sans 10\ngtk-theme-name=\"Fluent-grey-dark\"\ngtk-icon-theme-name=\"Papirus-Dark\"\ngtk-font-name=\"Liberation Sans 10\"\nsession.styleFile: ~/.fluxbox/styles/MX-comfort-dark\n1\n$\HOME/.config/tint2/bottom_mx21-comfort.tint2rc\nNone\n@import \"/usr/share/rofi/themes/glue_pro_blue.rasi\"\n/usr/share/backgrounds/Honesty.jpg" > $MXLKPATH/looks/MXFB-default.look

fi

#################################
# function save look

save_look() {
#define some variables

TITLE="MXFB-Look"
CLASS="mxfblook"
MXLKPATH="$HOME/.config/mxfb-look"
ICONPATH="/usr/share/pixmaps/mxcr-icon.png"

#read current look components

#theme and icons
LKTHEME="$(grep "gtk-theme-name" $HOME/.config/gtk-3.0/settings.ini)"
LKICON="$(grep "gtk-icon-theme-name" $HOME/.config/gtk-3.0/settings.ini)"
LKFONT="$(grep "gtk-font-name" $HOME/.config/gtk-3.0/settings.ini)"
LKTHEME2="$(grep "gtk-theme-name" $HOME/.gtkrc-2.0)"
LKICON2="$(grep "gtk-icon-theme-name" $HOME/.gtkrc-2.0)"
LKFONT2="$(grep "gtk-font-name" $HOME/.gtkrc-2.0)"

#fluxbox style
LKFLUXSTYLE="$(grep "styles" $HOME/.fluxbox/init)"

#tint2
TINTNUM="$(wc -l < $HOME/.config/tint2/tint2-sessionfile)"
LKTINT1="$(grep "tint2" $HOME/.config/tint2/tint2-sessionfile | sed -n 1p)"
LKTINT1=$(echo "${LKTINT1}" | sed -e 's/$HOME/\$HOME/g' )
LKTINT2="$(grep "tint2" $HOME/.config/tint2/tint2-sessionfile | sed -n 2p)"
LKTINT2=$(echo "${LKTINT2}" | sed -e 's/$HOME/\$HOME/g' )

if [ $TINTNUM = 0 ]; then
LKTINT1="None"
LKTINT2="None"
fi

if [ $TINTNUM = 1 ]; then
LKTINT2="None"
fi

#rofi
LKROFI="$(grep "themes" $HOME/.config/rofi/config.rasi)"

#background

LKBACK=$(grep "feh" $HOME/.fehbg)
LKBACK=$(echo "${LKBACK}" | sed -e "s/'/|/g")
LKBACK=$(echo "$LKBACK"  | cut -d '|' -f 2)
LKBACK="file="$LKBACK""

#make temp file
echo ""$LKTHEME"|"$LKICON"|"$LKFONT"|"$LKTHEME2"|"$LKICON2"|"$LKFONT2"|"$LKFLUXSTYLE"|"$TINTNUM"|"$LKTINT1"|"$LKTINT2"|"$LKROFI"|"$LKBACK"" > $MXLKPATH/tempdir/looktmp.txt

#amend temp
cd $MXLKPATH/tempdir

sed -i "s/gtk-theme-name\=/ /g" looktmp.txt
sed -i "s/gtk-icon-theme-name\=/ /g" looktmp.txt
sed -i "s/gtk-font-name\=/ /g" looktmp.txt
sed -i "s/session\.styleFile\:/ /g" looktmp.txt
sed -i "s/\$HOME\/\.config\/tint2\// /g" looktmp.txt
sed -i "s/\@import//g" looktmp.txt
#sed -i "s/file\=/ /g" looktmp.txt
sed -i "s/\"//g" looktmp.txt

#read temp

OLDIFS="$IFS"
IFS="|"

read -r -a YADFILL < looktmp.txt

LKTH="${YADFILL[0]}"
LKIC="${YADFILL[1]}"
LKFO="${YADFILL[2]}"
LKFS="${YADFILL[6]}"
LKTI1="${YADFILL[8]}"
LKTI2="${YADFILL[9]}"
LKRO="${YADFILL[10]}"
LKBG="${YADFILL[11]}"

LKRO=$(echo "${LKRO}" | sed -e "s/ //g" )

#if [ -z "$LKCO1" ]; then
#LKCO1="None"
#fi

###################################
#MAIN

MAIN=(yad --title="Save Current Look" --class="$CLASS" --window-icon="$ICONPATH" --borders=20 --center --width=600 --height=400 --fixed --form --columns=1 --align=left --separator="" --button="Cancel":1 --button="Save Look":0 \
--text="\n<b>Current Settings.\n</b>\n
GTK Theme: <b>"$LKTH"</b>\n
Gtk Icons: <b>"$LKIC"</b>\n
Gtk Font: <b>"$LKFO"</b>\n
Fluxbox Style: <b>"$LKFS"</b>\n
1st Tint2 Panel: <b>"$LKTI1"</b>\n
2nd Tint2 Panel: <b>"$LKTI2"</b>\n
Rofi: <b>"$LKRO"</b>\n
Wallpaper: <b>"$LKBG"</b>\n"
--field="Save Look as" "New-Look-Name"\
)
NEWNAME=$("${MAIN[@]}" | sed -e 's/ /-/g' )
(($?==0)) && echo "$NEWNAME" > $MXLKPATH/tempdir/tempname.txt

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

  exit

elif [ "$GETOUT" = 0 ]; then

read NEWNAME < $MXLKPATH/tempdir/tempname.txt
unset IFS

fi

#check new Look name is not empty and forbid MXFB-default overwrite

while [ -z "$NEWNAME" -o "$NEWNAME" = 'MXFB-default' ]; do

  NEWNAME=$(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --text="Look name "$NEWNAME" is protected. Choose another name." --form --center --borders=20 --separator="" \
  --field="<b>Name for new style</b>":LBL " " \
  --field=" " "$NEWNAME-new" )

    GETOUT=$(echo "$?")

    if [ "$GETOUT" != 0 ]; then

    exit

    fi

done

#check if new Look name exists, if yes ask if overwrite or different name

cd $MXLKPATH/looks

while [ -f $NEWNAME.look ]; do

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --fixed --text="A Look with this name already exists. \n\nDo you want to overwrite <b>"$NEWNAME"</b>\nor save as a different name\n" --button="Overwrite $NEWNAME":2 --button="Save as different name":3 --text-align=center --center --borders=20\

case $? in

2) rm -r $MXLKPATH/looks/$NEWNAME.look ;;

3) NEWNAME=$(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --form --center --borders=20 --separator="" \
--field="<b>Name for New Look</b>":LBL " " \
--field=" " "$NEWNAME-new" )    ;;

252) exit 0    ;;

esac
done

##############################################
#make look file

echo ""$LKTHEME"
"$LKICON"
"$LKFONT"
"$LKTHEME2"
"$LKICON2"
"$LKFONT2"
session.styleFile: "$LKFS"
"$TINTNUM"
"$LKTINT1"
"$LKTINT2"
@import \""$LKRO"\"
"$LKBACK"" > $MXLKPATH/looks/"$NEWNAME".look

#make preview image

WINLIST=$(wmctrl -l | grep -v tint2 | grep -v conky | grep -v 'galculator' | grep -v 'Task Manager' | awk '{ print$1 }')

for i in $WINLIST;
do
WINNUM=$i
wmctrl -i -r "$i" -b add,hidden
done

sleep 0.5
scrot $MXLKPATH/looks/"$NEWNAME".png -b -o -t 25
rm $MXLKPATH/looks/"$NEWNAME".png
mv $MXLKPATH/looks/"$NEWNAME"-thumb.png $MXLKPATH/looks/"$NEWNAME".png
sleep 0.5

for i in $WINLIST;
do
WINNUM=$i
wmctrl -i -r "$i" -b toggle,hidden
done

#all done

  yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=250 --fixed --center --borders=20 --text="All done!\n\nLook has been saved as <b>$NEWNAME</b>" --text-align=center --button="OK" \

exit
}

################################################
#function restore look

restore_look() {
#define some variables

TITLE="MXFB-Look"
CLASS="mxfblook"
MXLKPATH="$HOME/.config/mxfb-look"
ICONPATH="/usr/share/pixmaps/mxcr-icon.png"


#read saved looks
cd $MXLKPATH/looks
ls -f *.look > $MXLKPATH/tempdir/looklist.txt


#select look to restore

while [ -z "$LOOKRESTORE" ]; do

LOOKRESTORE=$( yad --title="Restore Look" --class="$CLASS" --window-icon="$ICONPATH" --text="\n<b> Choose which look to restore</b>\n" --center --width=400 --height=300 --center --list --no-headers --column=Style --separator="" < $MXLKPATH/tempdir/looklist.txt )

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

  exit

fi

if [ -z "$LOOKRESTORE" ]; then

  yad --title="Restore Look" --class="$CLASS" --window-icon="$ICONPATH" --text="\n<b> You need to select a look !</b>\n" --center  --width=400 --height=300 

fi

done

#read Settings for new look

cd $MXLKPATH/looks

mapfile LKRE < $LOOKRESTORE

LKTHEMENEW="${LKRE[0]}"
LKICONNEW="${LKRE[1]}"
LKFONTNEW="${LKRE[2]}"
LKTHEMENEW2="${LKRE[3]}"
LKICONNEW2="${LKRE[4]}"
LKFONTNEW2="${LKRE[5]}"
LKFSNEW="${LKRE[6]}"
TINTNUMNEW="${LKRE[7]}"
LKTINT1NEW="${LKRE[8]}"
LKTINT2NEW="${LKRE[9]}"
LKROFINEW="${LKRE[10]}"
LKBACKNEW="${LKRE[11]}"

LKTHEMENEW=$(echo "${LKTHEMENEW}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKICONNEW=$(echo "${LKICONNEW}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKFONTNEW=$(echo "${LKFONTNEW}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKTHEMENEW2=$(echo "${LKTHEMENEW2}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKICONNEW2=$(echo "${LKICONNEW2}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKFONTNEW2=$(echo "${LKFONTNEW2}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKFSNEW=$(echo "${LKFSNEW}" | sed -e 's/[]$\/*[\^]/\\&/g' )
LKTINT1NEW=$(echo "${LKTINT1NEW}" | sed -e 's/$HOME/\$HOME/g' )
LKTINT2NEW=$(echo "${LKTINT2NEW}" | sed -e 's/$HOME/\$HOME/g' )
LKROFINEW=$(echo "${LKROFINEW}" | sed -e 's/[]$\/*[\^]/\\&/g' )
LKBACKNEW=$(echo "${LKBACKNEW}" | sed -e 's/[]$ \/*[\^]/\\&/g' )

#read current look components

#theme and icons
LKTHEMEOLD="$(grep "gtk-theme-name" $HOME/.config/gtk-3.0/settings.ini)"
LKICONOLD="$(grep "gtk-icon-theme-name" $HOME/.config/gtk-3.0/settings.ini)"
LKFONTOLD="$(grep "gtk-font-name" $HOME/.config/gtk-3.0/settings.ini)"
LKTHEMEOLD2="$(grep "gtk-theme-name" $HOME/.gtkrc-2.0)"
LKICONOLD2="$(grep "gtk-icon-theme-name" $HOME/.gtkrc-2.0)"
LKFONTOLD2="$(grep "gtk-font-name" $HOME/.gtkrc-2.0)"

#fluxbox style
LKFSOLD="$(grep "styles" $HOME/.fluxbox/init)"

#tint2
LKTINT1OLD="$(grep "tint2" $HOME/.config/tint2/tint2-sessionfile | sed -n 1p)"
LKTINT2OLD="$(grep "tint2" $HOME/.config/tint2/tint2-sessionfile | sed -n 2p)"

#rofi
LKROFIOLD="$(grep "themes" $HOME/.config/rofi/config.rasi)"

#background
###

LKTHEMEOLD=$(echo "${LKTHEMEOLD}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKICONOLD=$(echo "${LKICONOLD}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKFONTOLD=$(echo "${LKFONTOLD}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKTHEMEOLD2=$(echo "${LKTHEMEOLD2}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKICONOLD2=$(echo "${LKICONOLD2}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKFONTOLD2=$(echo "${LKFONTOLD2}" | sed -e 's/[]$ .*[\^]/\\&/g' )
LKFSOLD=$(echo "${LKFSOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )
LKROFIOLD=$(echo "${LKROFIOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )
LKBACKOLD=$(echo "${LKBACKOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )

#make temp file
echo ""$LKTHEMENEW"|"$LKICONNEW"|"$LKFONTNEW"|"$LKTHEMENEW2"|"$LKICONNEW2"|"$LKFONTNEW2"|"$LKFSNEW"|"$TINTNUMNEW"|"$LKTINT1NEW"|"$LKTINT2NEW"|"$LKROFINEW"|"$LKBACKNEW"" > $MXLKPATH/tempdir/looktmp-new.txt

#amend temp
cd $MXLKPATH/tempdir

sed -i "s/gtk-theme-name\=/ /g" looktmp-new.txt
sed -i "s/gtk-icon-theme-name\=/ /g" looktmp-new.txt
sed -i "s/gtk-font-name\=/ /g" looktmp-new.txt
sed -i "s/session\.styleFile\:/ /g" looktmp-new.txt
sed -i "s/\$HOME\/\.config\/tint2\// /g" looktmp-new.txt
sed -i "s/\@import/ /g" looktmp-new.txt
sed -i "s/file\=//g" looktmp-new.txt
sed -i "s/\"/ /g" looktmp-new.txt

#read temp

OLDIFS="$IFS"
IFS="|"

read -r -a NEWFILL < looktmp-new.txt

NLKTH="${NEWFILL[0]}"
NLKIC="${NEWFILL[1]}"
NLKFO="${NEWFILL[2]}"
NLKFS="${NEWFILL[6]}"
NTINU="${NEWFILL[7]}"
NLKTI1="${NEWFILL[8]}"
NLKTI2="${NEWFILL[9]}"
NLKRO="${NEWFILL[10]}"
NLKBG="${NEWFILL[11]}"

PREVIEW="$MXLKPATH/looks/$LOOKRESTORE"
PREVIEW=$(echo "${PREVIEW}" | sed -e "s/\.look/\.png/g" )

#RESTOREMAIN

yad --title="Look details" --class="$CLASS" --window-icon="$ICONPATH" --borders=20 --center --width=900 --height=400 --fixed --image="$PREVIEW" --button="Back":1 --button="Restore Look":0 \
--text="<b>   "$LOOKRESTORE"</b>\n
   GTK Theme: <b>"$NLKTH"</b>\n
   Gtk Icons: <b>"$NLKIC"</b>\n
   Gtk Font: <b>"$NLKFO"</b>\n
   Fluxbox Style: <b>"$NLKFS"</b>\n
   1st Tint2 Panel: <b>"$NLKTI1"</b>\n
   2nd Tint2 Panel: <b>"$NLKTI2"</b>\n
   Rofi: <b>"$NLKRO"</b>\n
   Wallpaper: <b>"$NLKBG"</b>\n"\

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

  exit

elif [ "$GETOUT" = 0 ]; then

unset IFS

#Edit Config files

#gtk
cd ~/.config/gtk-3.0
sed -i -e "s/${LKTHEMEOLD}/${LKTHEMENEW}/g" settings.ini
sed -i -e "s/${LKICONOLD}/${LKICONNEW}/g" settings.ini
sed -i -e "s/${LKFONTOLD}/${LKFONTNEW}/g" settings.ini

cd ~
sed -i -e "s/${LKTHEMEOLD2}/${LKTHEMENEW2}/g" .gtkrc-2.0
sed -i -e "s/${LKICONOLD2}/${LKICONNEW2}/g" .gtkrc-2.0
sed -i -e "s/${LKFONTOLD2}/${LKFONTNEW2}/g" .gtkrc-2.0

#gtk bash
function reload_gtk_theme() {
  theme=$(gsettings get org.gnome.desktop.interface gtk-theme)
  gsettings set org.gnome.desktop.interface gtk-theme ''
  sleep 1
  gsettings set org.gnome.desktop.interface gtk-theme $theme
}

reload_gtk_theme

#fluxbox
cd ~/.fluxbox
sed -i -e "s/${LKFSOLD}/${LKFSNEW}/g"  ~/.fluxbox/init
fluxbox-remote restart

#tint
cd ~/.config/tint2

if [ $TINTNUMNEW = 2 ]; then

rm tint2-sessionfile
killall tint2
LKTINTNEWA=$(basename "$LKTINT1NEW")
LKTINTNEWB=$(basename "$LKTINT2NEW")
echo "$LKTINT1NEW
$LKTINT2NEW" >> ~/.config/tint2/tint2-sessionfile
tint2 -c $HOME/.config/tint2/$LKTINTNEWA >/dev/null 2>&1 &  disown
tint2 -c $HOME/.config/tint2/$LKTINTNEWB >/dev/null 2>&1 &  disown

fi

if  [ $TINTNUMNEW = 1 ]; then

rm tint2-sessionfile
killall tint2
LKTINTNEWA=$(basename "$LKTINT1NEW")
echo "$HOME/.config/tint2/$LKTINTNEWA" >> ~/.config/tint2/tint2-sessionfile
tint2 -c $HOME/.config/tint2/$LKTINTNEWA >/dev/null 2>&1 &  disown

fi

if  [ $TINTNUMNEW = 0 ]; then

rm tint2-sessionfile
killall tint2
echo "" >> ~/.config/tint2/tint2-sessionfile

fi

#rofi
cd $HOME/.config/rofi/
sed -i -e "s/${LKROFIOLD}/${LKROFINEW}/g" config.rasi

#background

NLKBG=$(echo "${NLKBG}" | sed -e 's/\\//g')
NLKBG=$(echo "${NLKBG}" | sed -e "s/'/|/g")
NLKBG=$(echo "$NLKBG"  | cut -d '|' -f 2)

feh --bg-scale "$NLKBG"

fi

exit

}

export -f save_look restore_look

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --center --borders=20 --text-align=center --text="<b>You can save the current look or restore a saved look</b>\n\nA look is comprised of the following elements\n- Gtk-Theme\n- Gtk-Icon\n- Gtk-Font\n- Fluxbox Style\n- up to two Tint2 Panels\n- Rofi Theme\n- Wallpaper\n\n" --button="Close" --button="Restore Look":"bash -c restore_look" --button="Save Current Look":"bash -c save_look" \
